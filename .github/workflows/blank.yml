name: Docker Build and Push

# Workflow'un çalışacağı olaylar
on:
  # Manuel tetikleme için workflow_dispatch ekledim
  workflow_dispatch:
  # Push olayları için
  push:
    branches: [ main, master ]
  # Pull request olayları (isteğe bağlı)
  # pull_request:
  #   branches: [ main, master ]

# İzinleri en aza indiriyoruz
permissions: {}

env:
  DOCKER_REGISTRY: harbor.medianova.com/cloud-org
  IMAGE_NAME: test
  STACK_NAME: test-app

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Proje Adını Ayıkla
        id: project
        run: echo "project_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_OUTPUT

      #- name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@v2

      #- name: Login to Docker Registry
      #  uses: docker/login-action@v2
      #  with:
      #    registry: ${{ env.DOCKER_REGISTRY }}
      #    username: ${{ secrets.DOCKER_USERNAME }}
      #    password: ${{ secrets.DOCKER_PASSWORD }}

      #- name: Build and push
      #  uses: docker/build-push-action@v4
      #  with:
      #    context: .
      #    push: true
      #    tags: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      # SSH anahtarını ayarlama adımı
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEV_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DEV_SSH_HOST }} >> ~/.ssh/known_hosts

      # SSH ile sunucuya bağlanma (örnek)
      - name: Connect to SSH server
        run: ssh ${{ secrets.DEV_SSH_USER }}@${{ secrets.DEV_SSH_HOST }} "echo SSH bağlantısı başarılı"

      - name: Deploy Stack to Swarm
        run: |
          file_path=$GITHUB_WORKSPACE/docker-compose.yml

          # Dosyanın mevcut olup olmadığını kontrol et
          if [ ! -f "$file_path" ]; then
            echo "Hata: '$file_path' dosyası bulunamadı."
          fi